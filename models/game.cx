package main

import "glfw"

import "phx"

type Settings struct {
  // Game settings
  level i32

  // Graphical settings
  rotation_x f32
  rotation_y f32
  rotation_z f32
  scale f32
}

func initSettings() (settings Settings) {
  settings.level = 1

  settings.rotation_x = 25.0
  settings.rotation_y = 0.0
  settings.rotation_z = 25.0
  settings.scale = 1.5
}

type Game struct {
  settings Settings
}

func initGame() (game Game) {
  game.settings = initSettings()

  InitPlayer() // Initializes the player
  InitGhosts() // Initialize the ghosts
  InitBoard()
}

func (game Game) leveUp (game Game, level i32) {
  game.settings.level = i32.add(game.settings.level, 1)
  level = game.settings.level
}

func (game Game) update () (game Game) {
  var time f64
  time = glfw.GetTime()

  // TOFIX @galah4d change update order
  g_player = PlayerUpdate(g_player, time)
  //game.board = game.board.update(game.player.index_x, game.player.index_y)
  for i:=0; i<4; i++ {
    g_ghosts[i] = GhostUpdate(g_ghosts[i], time)
  }
}

func (game Game) render (program i32) {
  var ratio f64
  ratio = f64.div(1920.0D, 1080.0D) // TODO @galah4d pass as args

  left := f64.add(f64.mul(-1.0D, ratio), f32.f64(g_player.geometry.position.x))
  right := f64.add(f64.mul(1.0D, ratio), f32.f64(g_player.geometry.position.x))
  bottom := f64.add(1.0D, f32.f64(g_player.geometry.position.y))
  top := f64.add(-1.0D, f32.f64(g_player.geometry.position.y))
  gl.Ortho(left, right, bottom, top, -1.0D, 1.0D)

  // Scales and rotates the scene
  gl.Scalef(game.settings.scale, game.settings.scale, game.settings.scale);
  gl.Rotatef(game.settings.rotation_x, 1.0, 0.0, 0.0 );
  gl.Rotatef(game.settings.rotation_y, 0.0, 1.0, 0.0 );
  gl.Rotatef(game.settings.rotation_z, 0.0, 0.0, 1.0 );

  gl.UseProgram(program)

  BoardRender(g_board)
  PlayerRender(g_player)
  for i:=0; i<4; i++ {
    GhostRender(g_ghosts[i])
  }
}
